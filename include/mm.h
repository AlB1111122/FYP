#pragma once
// lld

#define MT_DEVICE_nGnRnE_IDX 0x0
#define MT_NORMAL_CACHABLE_IDX 0x1
#define MT_DEVICE_nGnRnE_FLAGS 0x00
#define MT_NORMAL_CACHABLE_FLAGS 0xCC
#define MAIR_VALUE                                         \
  (MT_DEVICE_nGnRnE_FLAGS << (8 * MT_DEVICE_nGnRnE_IDX)) | \
      (MT_NORMAL_CACHABLE_FLAGS << (8 * MT_NORMAL_CACHABLE_IDX))

#define PAGE_SHIFT 12
#define TABLE_SHIFT 9
#define SECTION_SHIFT (PAGE_SHIFT + TABLE_SHIFT)
#define PAGE_SIZE (1 << PAGE_SHIFT)
#define SECTION_SIZE (1 << SECTION_SHIFT)

#define LOW_MEMORY (8 * SECTION_SIZE)

#define HIGH_MEMORY 0x40000000
#define PAGING_MEMORY (HIGH_MEMORY - LOW_MEMORY)
#define PAGING_PAGES (PAGING_MEMORY / PAGE_SIZE)

#define TD_VALID (1 << 0)
#define TD_BLOCK (0 << 1)
#define TD_TABLE (1 << 1)
#define TD_ACCESS (1 << 10)
#define TD_KERNEL_PERMS (1L << 54)
#define TD_INNER_SHARABLE (3 << 8)

#define TD_KERNEL_TABLE_FLAGS (TD_TABLE | TD_VALID)
#define TD_KERNEL_BLOCK_FLAGS                        \
  (TD_ACCESS | TD_INNER_SHARABLE | TD_KERNEL_PERMS | \
   (MT_NORMAL_CACHABLE_IDX << 2) | TD_BLOCK | TD_VALID)
#define TD_DEVICE_BLOCK_FLAGS                        \
  (TD_ACCESS | TD_INNER_SHARABLE | TD_KERNEL_PERMS | \
   (MT_DEVICE_nGnRnE_IDX << 2) | TD_BLOCK | TD_VALID)

#define ID_MAP_PAGES 6
#define ID_MAP_TABLE_SIZE (ID_MAP_PAGES * PAGE_SIZE)
#define ENTRIES_PER_TABLE 512
#define PGD_SHIFT (PAGE_SHIFT + 3 * TABLE_SHIFT)
#define PUD_SHIFT (PAGE_SHIFT + 2 * TABLE_SHIFT)
#define PUD_ENTRY_MAP_SIZE (1 << PUD_SHIFT)

#define BLOCK_SIZE 0x40000000
