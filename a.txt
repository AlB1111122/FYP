void updateVideo(video_app *self) {
  auto plm_time = plm_get_time(self->plm);
  if (plm_time >= frame_rate_info.total_t) {
    self->wants_to_quit = true;
  }
  double seek_to = -1;
  auto now = std::chrono::system_clock::now();

  std::chrono::duration<double, std::milli> elapsed_tp = now - self->last_time;
  double elapsed_time = elapsed_tp.count();

  if (elapsed_time >= frame_rate_info.frame_ms) {
    std::cout << elapsed_time << "\n";

    if (elapsed_time > (frame_rate_info.frame_ms * 2)) {
      std::cout << "tripped"
                << "\n";
      seek_to = plm_time +
                ((elapsed_time - (frame_rate_info.frame_ms * 1.48)) / 1000.0);
    }
    if (seek_to != -1) {
      plm_seek(self->plm, seek_to, TRUE);

      self->last_time = now;
      plm_decode(self->plm, (frame_rate_info.frame_ms / 1000.0));
    } else {
      self->last_time = now;
      plm_decode(self->plm, (frame_rate_info.frame_ms / 1000.0));
    }
  }

  if (plm_has_ended(self->plm)) {
    self->wants_to_quit = true;
  }

  SDL_Event ev;
  while (SDL_PollEvent(&ev)) {
    if (ev.type == SDL_QUIT ||
        (ev.type == SDL_KEYUP && ev.key.keysym.sym == SDLK_ESCAPE)) {
      self->wants_to_quit = true;
    }
  }
}//functional but slower than nessesary